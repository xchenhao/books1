(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{836:function(e,n,t){"use strict";t.r(n);var r=t(49),a=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"neo4j"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#neo4j"}},[e._v("#")]),e._v(" Neo4j")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("create database movies\n")])])]),t("h3",{attrs:{id:"cypher-syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cypher-syntax"}},[e._v("#")]),e._v(" Cypher Syntax")]),e._v(" "),t("p",[e._v("https://neo4j.com/docs/cypher-manual/4.2/")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('CREATE (ee:Person { name: "Emil", from: "Sweden", klout: 99 });\nMATCH (ee:Person) WHERE ee.name = "Emil" RETURN ee;\n\nMATCH (ee:Person) WHERE ee.name = "Emil"\nCREATE (js:Person { name: "Johan", from: "Sweden", learn: "surfing" }),\n(ir:Person { name: "Ian", from: "England", title: "author" }),\n(rvb:Person { name: "Rik", from: "Belgium", pet: "Orval" }),\n(ally:Person { name: "Allison", from: "California", hobby: "surfing" }),\n(ee)-[:KNOWS {since: 2001}]->(js),(ee)-[:KNOWS {rating: 5}]->(ir),\n(js)-[:KNOWS]->(ir),(js)-[:KNOWS]->(rvb),\n(ir)-[:KNOWS]->(js),(ir)-[:KNOWS]->(ally),\n(rvb)-[:KNOWS]->(ally);\n\nMATCH (ee:Person)-[:KNOWS]-(friends)\nWHERE ee.name = "Emil" RETURN ee, friends;\n\nMATCH (js:Person)-[:KNOWS]-()-[:KNOWS]-(surfer)\nWHERE js.name = "Johan" AND surfer.hobby = "surfing"\nRETURN DISTINCT surfer;\n\nPROFILE MATCH (js:Person)-[:KNOWS]-()-[:KNOWS]-(surfer)\nWHERE js.name = "Johan" AND surfer.hobby = "surfing"\nRETURN DISTINCT surfer\n')])])]),t("blockquote",[t("p",[e._v("CREATE\n(标签:节点{属性名1:属性值1,属性名2:属性值2,属性N:属性值N})")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE (CloudAtlas:Movie {title:'Cloud Atlas', released:2012, tagline:'Everything is connected'})\n")])])]),t("blockquote",[t("p",[e._v("CREATE\n(标签1)-[:关系{属性名1:属性值1,属性名2:属性值2,属性名N:属性值N}]->(标签2)")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE\n(TomH)-[:ACTED_IN {roles:['Zachry', 'Dr. Henry Goose', 'Isaac Sachs', 'Dermot Hoggins']}]->(CloudAtlas),\n")])])]),t("blockquote",[t("p",[e._v("MATCH\n(标签:{属性名1:属性值1,属性名2:属性值2,属性名N:属性值N})\nRETURN 标签")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('MATCH (cloudAtlas {title: "Cloud Atlas"}) RETURN cloudAtlas\n\n// people 为别名\nMATCH (people:Person) RETURN people.name LIMIT 10\n\nMATCH (nineties:Movie) WHERE nineties.released >= 1990 AND nineties.released < 2000 RETURN nineties.title\n\nMATCH (tom:Person {name: "Tom Hanks"})-[:ACTED_IN]->(tomHanksMovies) RETURN tom,tomHanksMovies\n\nMATCH (cloudAtlas {title: "Cloud Atlas"})<-[:DIRECTED]-(directors) RETURN directors.name\n\nMATCH (tom:Person {name:"Tom Hanks"})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors) RETURN coActors.name\n\nMATCH (people:Person)-[relatedTo]-(:Movie {title: "Cloud Atlas"}) RETURN people.name, Type(relatedTo), relatedTo\n\nWITH TomH as a\nMATCH (a)-[:ACTED_IN]->(m)<-[:DIRECTED]-(d) RETURN a,m,d LIMIT 10\n\nMATCH (bacon:Person {name:"Kevin Bacon"})-[*1..4]-(hollywood)\nRETURN DISTINCT hollywood\n\nMATCH p=shortestPath(\n(bacon:Person {name:"Kevin Bacon"})-[*]-(meg:Person {name:"Meg Ryan"})\n)\nRETURN p\n\n\nMATCH (tom:Person {name:"Tom Hanks"})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors),(coActors)-[:ACTED_IN]->(m2)<-[:ACTED_IN]-(cocoActors)\nWHERE NOT (tom)-[:ACTED_IN]->()<-[:ACTED_IN]-(cocoActors) AND tom <> cocoActors\nRETURN cocoActors.name AS Recommended, count(*) AS Strength ORDER BY Strength DESC\n\nMATCH (tom:Person {name:"Tom Hanks"})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors),(coActors)-[:ACTED_IN]->(m2)<-[:ACTED_IN]-(cruise:Person {name:"Tom Cruise"})\nRETURN tom, m, coActors, m2, cruise\n\nMATCH (n) RETURN n\n// Nodes can\'t be deleted if relationships exist\n// Delete both nodes and relationships together\n// Delete all Movie and Person nodes, and their relationships\nMATCH (n) DETACH DELETE n\n\n\nCREATE (ee:Person { name: "Emil", from: "Sweden", klout: 99 })\nMATCH (ee:Person) WHERE ee.name = "Emil" RETURN ee;\n')])])]),t("h3",{attrs:{id:"from-rdbms-to-grapth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-rdbms-to-grapth"}},[e._v("#")]),e._v(" FROM RDBMS TO grapth")]),e._v(" "),t("h4",{attrs:{id:"demo1-product-catalog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo1-product-catalog"}},[e._v("#")]),e._v(" demo1: Product Catalog")]),e._v(" "),t("ul",[t("li",[e._v("Load records")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/products.csv" AS row\nCREATE (n:Product)\nSET n = row,\nn.unitPrice = toFloat(row.unitPrice),\nn.unitsInStock = toInteger(row.unitsInStock), n.unitsOnOrder = toInteger(row.unitsOnOrder),\nn.reorderLevel = toInteger(row.reorderLevel), n.discontinued = (row.discontinued <> "0")\n\nLOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/categories.csv" AS row\nCREATE (n:Category)\nSET n = row\n\nLOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/suppliers.csv" AS row\nCREATE (n:Supplier)\nSET n = row\n')])])]),t("ul",[t("li",[e._v("Create indexes")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE INDEX ON :Product(productID)\nCREATE INDEX ON :Category(categoryID)\nCREATE INDEX ON :Supplier(supplierID)\n")])])]),t("ul",[t("li",[e._v("Create data relationships")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("MATCH (p:Product),(c:Category)\nWHERE p.categoryID = c.categoryID\nCREATE (p)-[:PART_OF]->(c)\n\nMATCH (p:Product),(s:Supplier)\nWHERE p.supplierID = s.supplierID\nCREATE (s)-[:SUPPLIES]->(p)\n")])])]),t("ul",[t("li",[e._v("Query")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('MATCH (s:Supplier)--\x3e(:Product)--\x3e(c:Category)\nRETURN s.companyName as Company, collect(distinct c.categoryName) as Categories\n\nMATCH (c:Category {categoryName:"Produce"})<--(:Product)<--(s:Supplier)\nRETURN DISTINCT s.companyName as ProduceSuppliers\n')])])]),t("h4",{attrs:{id:"demo2-customer-orders"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo2-customer-orders"}},[e._v("#")]),e._v(" demo2: Customer Orders")]),e._v(" "),t("ul",[t("li",[e._v("Load and index records")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/customers.csv" AS row\nCREATE (n:Customer)\nSET n = row\n\nLOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/orders.csv" AS row\nCREATE (n:Order)\nSET n = row\n\nCREATE INDEX ON :Customer(customerID)\nCREATE INDEX ON :Order(orderID)\n')])])]),t("ul",[t("li",[e._v("Create data relationships")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("MATCH (c:Customer),(o:Order)\nWHERE c.customerID = o.customerID\nCREATE (c)-[:PURCHASED]->(o)\n")])])]),t("h4",{attrs:{id:"demo3-customer-order-graph"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo3-customer-order-graph"}},[e._v("#")]),e._v(" demo3: Customer Order Graph")]),e._v(" "),t("ul",[t("li",[e._v("Load and index records")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/order-details.csv" AS row\nMATCH (p:Product), (o:Order)\nWHERE p.productID = row.productID AND o.orderID = row.orderID\nCREATE (o)-[details:ORDERS]->(p)\nSET details = row,\ndetails.quantity = toInteger(row.quantity)\n')])])]),t("ul",[t("li",[e._v("Query")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('MATCH (cust:Customer)-[:PURCHASED]->(:Order)-[o:ORDERS]->(p:Product),\n  (p)-[:PART_OF]->(c:Category {categoryName:"Produce"})\nRETURN DISTINCT cust.contactName as CustomerName, SUM(o.quantity) AS TotalProductsPurchased\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);